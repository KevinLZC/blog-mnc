---
// Import statements
import Logo from '@/components/Logo.astro';
import menu from '@/config/menu.json';
import { IoSearch } from 'react-icons/io5';
import { MdKeyboardBackspace } from "react-icons/md";

export interface ChildNavigationLink {
  name: string;
  url: string;
}

export interface NavigationLink {
  name: string;
  url: string;
  hasChildren?: boolean;
  children?: ChildNavigationLink[];
}

const { main }: { main: NavigationLink[] } = menu;

// Function to check if the current link is active
function isActive(url: string): boolean {
  const pathname = Astro.url.pathname.split('/')[1];
  return pathname === url.split('/')[1];
}

// Function to check if the current page is visible
function isVisible(): boolean {
  const pathname = Astro.url.pathname;
  return pathname === '/';
}
---

<header class='header pt-6'>
  <nav class='navbar container'>
    <!-- Logo -->
    <div class='order-0'>
      <Logo />
    </div>
    <!-- Navbar toggler -->
    <input id='nav-toggle' type='checkbox' class='hidden' />
    <label
      id='show-button'
      for='nav-toggle'
      class='order-2 flex cursor-pointer items-center text-black lg:order-1 lg:hidden'
    >
      <svg class='h-6 fill-current' viewBox='0 0 20 20'>
        <title>Menu Open</title>
        <path d='M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z'></path>
      </svg>
    </label>
    <label
      id='hide-button'
      for='nav-toggle'
      class='order-2 hidden cursor-pointer items-center text-black lg:order-1'
    >
      <svg class='h-6 fill-current' viewBox='0 0 20 20'>
        <title>Menu Close</title>
        <polygon
          points='11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2'
          transform='rotate(45 10 10)'></polygon>
      </svg>
    </label>
    <!-- /Navbar toggler -->

    <ul
      id='nav-menu'
      class='navbar-nav order-3 hidden w-full lg:order-1 lg:flex lg:w-auto'
    >
      {
        main.map(menu => (
          <>
            {menu.hasChildren ? (
              <li class='nav-item nav-dropdown group relative cursor-pointer'>
                <span class='nav-link inline-flex items-center'>
                  {menu.name}
                  <svg class='h-5 w-5 fill-current' viewBox='0 0 20 20'>
                    <path d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z' />
                  </svg>
                </span>
                <ul class='nav-dropdown-list hidden group-hover:block lg:invisible lg:absolute lg:block lg:opacity-0 lg:group-hover:visible lg:group-hover:opacity-100'>
                  {menu.children?.map(child => (
                    <li class='nav-dropdown-item'>
                      <a href={child.url} class='nav-dropdown-link'>
                        {child.name}
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ) : (
              <li class='nav-item'>
                <a 
                  href={menu.url} 
                  class={`nav-link block ${isActive(menu.url) ? 'active' : ''}`}
                >
                  <span class="nav-link-text">
                    {menu.name}
                  </span>
                </a>
              </li>
            )}
          </>
        ))
      }
    </ul>
    <div class='order-1 ml-auto flex lg:order-2 lg:ml-0'>
      <a
        class='mr-4 inline-block cursor-pointer p-2 text-xl text-dark transition hover:text-primary lg:mr-0'
        href='/search'
        title='search'
        aria-label='search'
      >
        <IoSearch />
      </a>
    </div>
  </nav>
</header>

<div class={`container relative -mb-16 mt-12 z-index-10 ${isVisible() ? 'hidden' : ''}`}>
  <button onclick="goBack()" class="border-none flex items-center gap-x-2 py-2 hover:text-primary cursor-pointer">
    <MdKeyboardBackspace className="text-2xl" />
    Regresar
  </button>
</div>

<script is:inline>
  function goBack() {
    const previousPage = document.referrer;
    const currentOrigin = window.location.origin;

    if (document.startViewTransition) {
      if (previousPage && previousPage.startsWith(currentOrigin)) {
        document.startViewTransition(() => {
          history.back();
        });
      } else {
        window.location.href = '/';
      }
    } else {
      if (previousPage && previousPage.startsWith(currentOrigin)) {
        history.back();
      } else {
        window.location.href = '/';
      }
    }
  }
</script>
